{"version":3,"sources":["../../src/app/services/pubsub.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAOI,QAAQ,GAAqB,IAAI,CAAC;YAGtC,8BAAa,gBAAgB,GAAG,kBAAkB,EAAA;YAClD,4CAAa,8BAA8B,GAAG,SAAS,GAAE,gBAAgB,EAAC;YAC1E,kCAAa,oBAAoB,GAAG,WAAW,GAAE,gBAAgB,EAAC;YAClE,mCAAa,qBAAqB,GAAG,YAAY,GAAE,gBAAgB,EAAC;YACpE,qCAAa,uBAAuB,GAAG,cAAc,GAAE,gBAAgB,EAAC;YACxE,8CAAa,gCAAgC,GAAG,iBAAiB,GAAE,gBAAgB,EAAC;YACpF,yCAAa,2BAA2B,GAAG,mBAAmB,GAAE,gBAAgB,EAAC;YACjF,0CAAa,4BAA4B,GAAG,oBAAoB,GAAE,gBAAgB,EAAC;YACnF,4CAAa,8BAA8B,GAAG,sBAAsB,GAAE,gBAAgB,EAAC;YAEvF,0BAAa,YAAY,GAAG,cAAc,EAAC;YAC3C,0CAAa,4BAA4B,GAAG,iBAAiB,GAAE,YAAY,EAAC;YAC5E,qCAAa,uBAAuB,GAAG,mBAAmB,GAAE,YAAY,EAAC;YACzE,sCAAa,wBAAwB,GAAG,oBAAoB,GAAE,YAAY,EAAC;YAC3E,wCAAa,0BAA0B,GAAG,sBAAsB,GAAE,YAAY,EAAC;YAC/E,kCAAa,oBAAoB,GAAG,sBAAsB,EAAC;YAI3D,4BAAa,cAAc,GAAG,gBAAgB,EAAC;YAC/C,wBAAa,UAAU,GAAG,YAAY,EAAC;YACvC,sCAAa,wBAAwB,GAAG,0BAA0B,EAAC;YAI9C,aAAa;gBAIhC;oBAGE,EAAE,CAAA,CAAC,QAAQ,KAAK,IAAI,CAAC,CACrB,CAAC;wBACG,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAC;oBAEvC,CAAC;gBAEH,CAAC;gBAED,kCAAU,GAAV;oBAEI,MAAM,CAAC,QAAQ,CAAC;gBACpB,CAAC;gBAEH,oBAAC;YAAD,CApBA,AAoBC,IAAA;YApBoB,aAAa;gBADjC,iBAAU,EAAE;;eACQ,aAAa,CAoBjC;iCApBoB,aAAa;YA+BlC;gBAII;oBADQ,uBAAkB,GAAU,oBAAoB,CAAA;gBAMxD,CAAC;gBAGM,sCAAU,GAAjB;oBAEI,MAAM,CAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACpD,CAAC;gBAIL,wBAAC;YAAD,CAnBA,AAmBC,IAAA;QAEA,CAAC","file":"pubsub.service.js","sourcesContent":["\n \nimport {Injectable} from '@angular/core';\nimport {Restaurant} from './../model/restaurant.interface';\nimport * as postal from \"postal\";\n\n\nlet _service:PubSubServiceImpl = null; \n\n\nexport const RESTAURANT_TOPIC = \"restaurant-topic\"\nexport const CRUD_RESTAURANT_WILDCARD_TOPIC = \"*.crud.\"+ RESTAURANT_TOPIC;\nexport const ADD_RESTAURANT_TOPIC = \"ADD.crud.\"+ RESTAURANT_TOPIC;\nexport const EDIT_RESTAURANT_TOPIC = \"EDIT.crud.\"+ RESTAURANT_TOPIC;\nexport const DELETE_RESTAURANT_TOPIC = \"DELETE.crud.\"+ RESTAURANT_TOPIC;\nexport const COMMIT_RESTAURANT_WILDCARD_TOPIC = '*.commit.topic.'+ RESTAURANT_TOPIC;\nexport const ADD_RESTAURANT_COMMIT_TOPIC = 'ADD.commit.topic.'+ RESTAURANT_TOPIC;\nexport const SAVE_RESTAURANT_COMMIT_TOPIC = 'SAVE.commit.topic.'+ RESTAURANT_TOPIC;\nexport const DELETE_RESTAURANT_COMMIT_TOPIC = 'DELETE.commit.topic.'+ RESTAURANT_TOPIC;\n\nexport const REVIEW_TOPIC = \"review-topic\";\nexport const COMMIT_REVIEW_WILDCARD_TOPIC = '*.commit.topic.'+ REVIEW_TOPIC;\nexport const ADD_REVIEW_COMMIT_TOPIC = 'ADD.commit.topic.'+ REVIEW_TOPIC;\nexport const SAVE_REVIEW_COMMIT_TOPIC = 'SAVE.commit.topic.'+ REVIEW_TOPIC;\nexport const DELETE_REVIEW_COMMIT_TOPIC = 'DELETE.commit.topic.'+ REVIEW_TOPIC;\nexport const REFRESH_REVIEW_TOPIC = \"refresh.review.topic\";\n\n\n\nexport const FEEDBACK_TOPIC = 'feedback.topic';\nexport const WAIT_TOPIC = \"wait.topic\";\nexport const REFRESH_RESTAURANT_TOPIC = \"refresh.restaurant.topic\";\n\n\n@Injectable()\nexport default class PubSubService {\n \n  \n  private service:PubSubServiceImpl\n  constructor()\n  {\n    \n    if(_service === null)\n    {\n        _service = new PubSubServiceImpl();\n        \n    }\n    \n  }\n\n  getService():PubSubServiceImpl\n  {\n      return _service;\n  }\n\n}\n\nexport interface PubSubSystem\n{\n    getChannel():IChannelDefinition;\n    \n   \n\n}\n\n\nclass PubSubServiceImpl implements PubSubSystem {\n\n\n    private RESTAURANT_CHANNEL:string = \"restaurant-channel\"\n    constructor()\n    {\n        \n          \n         \n    }\n\n\n    public getChannel():IChannelDefinition\n    {\n        return  postal.channel(this.RESTAURANT_CHANNEL);\n    }\n    \n\n\n}\n\n "],"sourceRoot":"/src"}