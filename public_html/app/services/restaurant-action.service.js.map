{"version":3,"sources":["../../src/app/services/restaurant-action.service.ts"],"names":[],"mappings":"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","file":"restaurant-action.service.js","sourcesContent":["import PubSubService, { PubSubSystem } from './pubsub.service';\nimport { RestaurantService } from './restaurant.service';\nimport { WaitRequest, Restaurant, messageType, RefreshMessage, ReviewDTO, ReviewPayload } from './../model/restaurant.interface';\nimport { Injectable } from '@angular/core';\nimport FeedbackMessageImpl from './../model/FeedbackMessageImpl';\nimport {\n    DELETE_RESTAURANT_TOPIC, FEEDBACK_TOPIC, REFRESH_RESTAURANT_TOPIC, EDIT_RESTAURANT_TOPIC,\n    COMMIT_RESTAURANT_WILDCARD_TOPIC, WAIT_TOPIC,REFRESH_REVIEW_TOPIC,\n    COMMIT_REVIEW_WILDCARD_TOPIC\n} from './../services/pubsub.service'\n\n\n@Injectable()\nexport class RestaurantActionService {\n\n\n    private sub: PubSubSystem;\n\n    constructor(private restaurantService: RestaurantService,\n        private subProvider: PubSubService) {\n\n        this.sub = subProvider.getService();\n\n        this.sub.getChannel().subscribe(COMMIT_RESTAURANT_WILDCARD_TOPIC, (data, envelope: IEnvelope) => {\n\n            let action = envelope.topic.split(\".\")[0];\n            // console.log(`got action ${action} in restaurant-action-service`)\n            if (action === \"ADD\") {\n                this.handleAdd(data);\n            }\n            if (action === \"SAVE\") {\n                this.handleSave(data);\n            }\n            if (action === \"DELETE\") {\n                this.handleDelete(data);\n            }\n\n\n\n        });\n\n        this.sub.getChannel().subscribe(COMMIT_REVIEW_WILDCARD_TOPIC, (data: ReviewPayload, envelope: IEnvelope) => {\n\n            let action = envelope.topic.split(\".\")[0];\n\n\n            if (action === \"SAVE\") {\n                this.handleReviewSave(data);\n            }\n            if (action === \"ADD\") {\n                this.handleReviewAdd(data);\n            }\n            if (action === \"DELETE\") {\n                this.handleReviewDelete(data);\n            }\n\n\n\n        });\n\n    }\n\n    sendWait(state: boolean) {\n        var waitMessage = <WaitRequest>{};\n        waitMessage.state = state;\n        this.sub.getChannel().publish(WAIT_TOPIC, waitMessage);\n    }\n\n    sendFeedback(f: FeedbackMessageImpl) {\n        this.sub.getChannel().publish(FEEDBACK_TOPIC, f);\n    }\n\n    sendRestaurantRefresh(refreshRequest) {\n        this.sub.getChannel().publish(REFRESH_RESTAURANT_TOPIC, refreshRequest);\n    }\n\n\n    handleDelete(data) {\n\n        this.restaurantService.deleteRestaurant(data.selectedRestaurant).subscribe(\n\n            () => {\n\n\n                this.sendWait(true);\n\n                let f = new FeedbackMessageImpl();\n                f.message = \"Restaurant Deleted\";\n                f.show = true;\n                f.type = messageType.info;\n                this.sendFeedback(f);\n                this.sendRestaurantRefresh({ doRefresh: true, selectedRestaurantId: null });\n                this.sub.getChannel().publish(DELETE_RESTAURANT_TOPIC, {});\n\n\n            },\n            err => { console.log(JSON.stringify(err)) }\n\n        )\n    }\n\n    handleAdd(data) {\n        let f = new FeedbackMessageImpl();\n        f.message = \"Restaurant Added\";\n        f.show = true;\n        f.type = messageType.info;\n        this.sendWait(true);\n        this.restaurantService.addRestaurant(data).subscribe(\n\n            (idInfo) => {\n                this.sendFeedback(f);\n                this.sendRestaurantRefresh({ doRefresh: true, selectedRestaurantId: idInfo.id })\n                let newItem: Restaurant = { ...data };\n                newItem.id = idInfo.id;\n                this.sub.getChannel().publish(EDIT_RESTAURANT_TOPIC, { selectedRestaurant: newItem })\n\n            },\n            err => { console.log(JSON.stringify(err)) }\n\n        )\n    }\n\n\n\n    handleSave(data) {\n\n        let f = new FeedbackMessageImpl();\n        f.message = \"Save completed\";\n        f.show = true;\n        f.type = messageType.info;\n        this.sendWait(true)\n        this.restaurantService.saveResaurant(data).subscribe(\n\n            () => {\n                this.sendFeedback(f);\n                this.sendRestaurantRefresh({ doRefresh: true, selectedRestaurantId: data.id })\n            },\n            err => { console.log(JSON.stringify(err)) }\n\n        )\n\n\n\n    }\n\n    ///// reviews /////////////////////////////////////////\n\n\n    sendReviewRefresh(restaurantId: number,feedback:string) {\n        let f = new FeedbackMessageImpl();\n        f.message = feedback;\n        f.show = true;\n        f.type = messageType.info;\n        this.restaurantService.getRestaurant(restaurantId + \"\").subscribe(\n\n            (data) => {\n                this.sendFeedback(f);\n                this.sub.getChannel().publish(REFRESH_REVIEW_TOPIC,{selectedRestaurant:data})\n\n            },\n            err => {\n                console.log(JSON.stringify(err));\n                this.sendWait(false);\n            }\n\n        )\n\n    }\n\n\n    handleReviewAdd(data: ReviewPayload) {\n        this.sendWait(true);\n        this.restaurantService.addReview(data).subscribe(\n\n            () => {\n                 \n                this.sendReviewRefresh(data.restaurantId,\"Review Added\");\n\n            },\n            err => { console.log(JSON.stringify(err)) }\n\n        )\n\n    }\n\n    handleReviewDelete(data: ReviewPayload) {\n        this.sendWait(true);\n        this.restaurantService.deleteReview(data).subscribe(\n\n            () => {\n                 \n                this.sendReviewRefresh(data.restaurantId,\"Review Deleted\");\n\n            },\n            err => { console.log(JSON.stringify(err)) }\n\n        )\n\n\n    }\n\n\n    handleReviewSave(data: ReviewPayload) {\n        \n        this.sendWait(true)\n        this.restaurantService.saveReview(data).subscribe(\n\n            () => {\n                 \n                this.sendReviewRefresh(data.restaurantId,\"Review Saved\");\n\n            },\n            err => { console.log(JSON.stringify(err)) }\n\n        )\n    }\n\n\n}"],"sourceRoot":"/src"}