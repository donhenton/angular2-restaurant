{"version":3,"sources":["../../src/app/components/edit-reviewDTO-container.ts"],"names":[],"mappings":"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","file":"edit-reviewDTO-container.js","sourcesContent":["import { Component } from '@angular/core';\nimport * as postal from \"postal\";\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport PubSubService, { PubSubSystem } from './../services/pubsub.service';\nimport {\n    SAVE_REVIEW_COMMIT_TOPIC, EDIT_RESTAURANT_TOPIC, WAIT_TOPIC,   ADD_REVIEW_COMMIT_TOPIC,\n    REFRESH_REVIEW_TOPIC, CRUD_RESTAURANT_WILDCARD_TOPIC, DELETE_REVIEW_COMMIT_TOPIC\n} from './../services/pubsub.service'\nimport { WaitRequest, Restaurant, ReviewDTO, ReviewPayload } from \"../model/restaurant.interface\";\nimport { ReviewListRow } from './review-list-row';\n\n\n\n@Component({\n    selector: 'edit-reviewDTO-container',\n    template: ` \n     \n     <section [hidden]=\"backUp === null\" class=\"editReviewContainer\">\n            <span class=\"editHeader\">Reviews</span>\n            <span class=review-validation-message>{{validationMessage}}</span>\n            <button (click)=\"addReview()\" class=\"editButton addButton\">Add Review</button>\n    \n    \n    \n            <div id=\"reviewTableHeaderContainer\">\n                \n                 <span class=\"header rating\">Stars</span><span class=\"header listing\">Review</span><span class=\"header actionArea\">&nbsp;</span>\n                 \n            </div>\n    \n    \n    \n              \n              <div id=\"reviewTableBodyContainer\">\n              <table>\n              <tbody>\n\n               <tr [ngClass]=\"{dimmed: dimThisRow(review)}\" [attr.data-id]=\"review.id\"   *ngFor=\"let review of this.reviewList; let indexVal = index\">\n                  <review-list-row [idx]=\"indexVal\" [currentReview]=\"reviewBackup\" (edit-event)=\"onEditChangeEvent($event)\"   [review]=\"review\"></review-list-row>\n                  </tr>\n\n              </tbody>\n              </table>\n              </div>\n    </section>          \n    \n  `\n})\n\nexport class EditReviewDTOContainer {\n\n\n    private subscriptions: ISubscriptionDefinition[] = [];\n    private sub: PubSubSystem;\n    private reviewList: ReviewDTO[];\n    private backUp: Restaurant = null;\n    private reviewBackup: ReviewDTO = null;\n    private validationMessage:string = \"\";\n\n    constructor(fb: FormBuilder, private subProvider: PubSubService) {\n        // console.log(\"in DTO con\")\n        this.sub = subProvider.getService();\n        let s1 = this.sub.getChannel().subscribe(CRUD_RESTAURANT_WILDCARD_TOPIC,\n            (data: any, envelope: IEnvelope) => this.handleCrudOperation(data.selectedRestaurant, envelope));\n\n        let s2 = this.sub.getChannel().subscribe(REFRESH_REVIEW_TOPIC,\n            (data: any, envelope: IEnvelope) => this.handleRefresh(data.selectedRestaurant, envelope));\n\n        this.subscriptions.push(s1);\n        this.subscriptions.push(s2);\n\n    }\n\n    sendWait(state: boolean) {\n        var waitMessage = <WaitRequest>{};\n        waitMessage.state = state;\n        this.sub.getChannel().publish(WAIT_TOPIC, waitMessage);\n    }\n\n    handleRefresh(data: Restaurant, envelope: IEnvelope) {\n        this.backUp = { ...data };\n        this.reviewList = this.backUp.reviewDTOs;\n        this.reviewBackup = null;\n        this.sendWait(false);\n        this.validationMessage = \"\";\n    }\n\n    dimThisRow(currentReview) {\n        if (this.reviewBackup && currentReview) {\n            if (this.reviewBackup.id === currentReview.id) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n\n    handleCrudOperation(data: Restaurant, envelope: IEnvelope) {\n\n        let action = envelope.topic.split('.')[0];\n        //console.log(\"receiving crud \" + JSON.stringify(envelope))\n        if (action === \"EDIT\") {\n            // console.log(\"data \" + JSON.stringify(data.reviewDTOs))\n\n            this.backUp = { ...data };\n            this.reviewList = this.backUp.reviewDTOs;\n            this.reviewBackup = null;\n        }\n        if (action === \"DELETE\") {\n            // console.log(\"data \" + JSON.stringify(data.reviewDTOs))\n\n            this.backUp = null;\n            this.reviewList = null;\n            this.reviewBackup = null;\n        }\n\n    }\n\n    ngOnDestroy() {\n\n        this.subscriptions.forEach(s => {\n            if (s) {\n\n                s.unsubscribe();\n                s = null;\n            }\n        })\n\n    }\n\n    ngOnInit() {\n        console.log(\"init\")\n\n\n    }\n\n    addReview() {\n\n        let newReview = <ReviewDTO>{};\n        newReview.id = -1;\n        newReview.reviewListing = \"\";\n        newReview.stampDate = null;\n        newReview.starRating = 1;\n        this.reviewList = [newReview].concat(this.reviewList);\n        this.reviewBackup = this.reviewList[0];\n        return;\n\n    }\n\n\n    onEditChangeEvent(ev) {\n\n        if (ev.type == \"FORM_VALIDATION\")\n        {\n\n           // console.log(`validation message ${ev.invalid} ${ev.message}`)\n            if (ev.invalid)\n            {\n                this.validationMessage = ev.message;\n            }\n            else\n            {\n                this.validationMessage = \"\";\n            }\n\n        }\n\n\n        if (ev.type == \"ADD\")\n        {\n                let payload: ReviewPayload = <ReviewPayload>{};\n                payload.restaurantId = this.backUp.id;\n                payload.reviewDTO = ev.selectedReview;\n                this.sub.getChannel().publish(ADD_REVIEW_COMMIT_TOPIC, payload);\n                return;\n        }\n\n        if (ev.type == \"DELETE\") {\n            let sure = window.confirm(\"Are you sure you want to delete the current review?\");\n            if (sure) {\n                let payload: ReviewPayload = <ReviewPayload>{};\n                payload.restaurantId = this.backUp.id;\n                payload.reviewDTO = ev.selectedReview;\n                this.sub.getChannel().publish(DELETE_REVIEW_COMMIT_TOPIC, payload);\n            }\n            return;\n        }\n\n        if (this.reviewBackup && this.reviewBackup.id !== ev.selectedReview.id) {\n            return;\n        } //events from buttons not on the current review are ignored\n\n\n  \n\n\n        //console.log(\"review container \" + JSON.stringify(ev));\n        this.reviewBackup = { ...ev.selectedReview };\n\n        if (ev.type == \"CANCEL\") {\n            this.reviewBackup = null;\n            let t: IEnvelope = <IEnvelope>{};\n            t.topic = EDIT_RESTAURANT_TOPIC;\n            this.validationMessage = \"\";\n            this.handleCrudOperation(this.backUp, t);\n\n            return;\n        }\n        if (ev.type === 'SAVE') {\n            //console.log(\"the review listing is \"+ev.selectedReview.reviewListing)\n            let payload: ReviewPayload = <ReviewPayload>{};\n            payload.restaurantId = this.backUp.id;\n            payload.reviewDTO = ev.selectedReview;\n\n            this.sub.getChannel().publish(SAVE_REVIEW_COMMIT_TOPIC, payload);\n\n\n        }\n\n\n\n\n\n\n\n\n\n    }\n\n\n\n\n\n\n}\n"],"sourceRoot":"/src"}