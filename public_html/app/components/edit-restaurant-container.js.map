{"version":3,"sources":["../../src/app/components/edit-restaurant-container.ts"],"names":[],"mappings":"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","file":"edit-restaurant-container.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Restaurant } from './../model/restaurant.interface';\nimport { RestaurantService } from './../services/restaurant.service';\nimport PubSubService, { PubSubSystem } from './../services/pubsub.service';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { CRUD_RESTAURANT_WILDCARD_TOPIC, WAIT_TOPIC ,ADD_RESTAURANT_COMMIT_TOPIC,SAVE_RESTAURANT_COMMIT_TOPIC} from './../services/pubsub.service'\n\n\n\n\n@Component({\n    selector: 'edit-restaurant-container',\n    template: `\n  <section [hidden]=\"backUp === null\" class=\"editRestaurantContainer\">\n<form id=\"editForm\" [formGroup]=\"editForm\">\n<input type=\"hidden\" formControlName=\"id\" >\n<table class=\"editTable\">\n<tbody>\n<tr>\n<th>Name: </th>\n<td>\n<input type=\"text\" formControlName=\"name\" class=\"inputName\" value=\"\" >\n</td>\n<th>City: </th>\n<td>\n<input   type=\"text\" formControlName=\"city\" class=\"inputCity\" value=\"\">\n</td>\n</tr>\n<tr><th>State: </th>\n<td><input type=\"text\" formControlName=\"state\" class=\"inputState\" value=\"\" ></td>\n<th>ZipCode:</th>\n<td>\n<input type=\"text\" formControlName=\"zipCode\" class=\"inputZipCode\" value=\"\"></td>\n</tr>\n<tr>\n<th>Version:</th>\n<td>\n<select formControlName=\"version\">\n<option value=\"1\">1</option>\n<option selected=\"\" value=\"2\">2</option>\n<option value=\"3\">3</option>\n</select>\n</td>\n\n</tr>\n<tr>\n<td><button (click)=\"cancelAction($event)\"   class=\"warnButton\">Cancel</button></td>\n<td><button (click)=\"saveAction($event)\" [class.inactive] = \"!this.editForm.valid || this.equalToBackup()\"   class=\"editButton\">Save</button></td>\n<td colspan='2'>\n \n  <div *ngIf=\"!editForm.valid && !editForm.pristine\">\n  \n<div *ngIf=\"!editForm.valid\">\n        <div class=\"red-color errorInfo\" *ngIf=\"editForm.controls.name.errors && editForm.controls.name.errors.minlength\">The name must be {{editForm.controls.name.errors.minlength.requiredLength}} chars long</div>\n        <div class=\"red-color errorInfo\" *ngIf=\"editForm.controls.city.errors && editForm.controls.city.errors.minlength\">The city must be {{editForm.controls.city.errors.minlength.requiredLength}} chars long</div>\n        <div class=\"red-color errorInfo\" *ngIf=\"editForm.controls.state.errors && editForm.controls.state.errors.minlength\">The state must be {{editForm.controls.state.errors.minlength.requiredLength}} chars long</div>\n        <div class=\"red-color errorInfo\" *ngIf=\"editForm.controls.zipCode.errors && editForm.controls.zipCode.errors.minlength\">The zipCode must be {{editForm.controls.zipCode.errors.minlength.requiredLength}} chars long</div>\n\n        <div class=\"red-color errorInfo\" *ngIf=\"editForm.controls.name.errors && editForm.controls.name.errors.required\">The name is required</div>\n        <div class=\"red-color errorInfo\" *ngIf=\"editForm.controls.city.errors && editForm.controls.city.errors.required\">The city is required</div>\n        <div class=\"red-color errorInfo\" *ngIf=\"editForm.controls.state.errors && editForm.controls.state.errors.required\">The state is required</div>\n        <div class=\"red-color errorInfo\" *ngIf=\"editForm.controls.zipCode.errors && editForm.controls.zipCode.errors.required\">The zipCode is required</div>\n\n\n\n</div>\n\n\n\n  \n  </div>\n</td>\n</tr>\n</tbody>\n</table>\n</form>\n</section>\n \n  \n  `\n})\n//http://blog.ng-book.com/the-ultimate-guide-to-forms-in-angular-2/\nexport class EditRestaurantContainer {\n\n\n\n\n    private sub: PubSubSystem;\n    private backUp: Restaurant = null;\n    private actionState: string = null;\n    private editForm: FormGroup;\n    private crudRequestSubscription: ISubscriptionDefinition;\n\n\n    constructor(private restaurantService: RestaurantService,\n        private subProvider: PubSubService, fb: FormBuilder) {\n      //  console.log(\"in restaurant con\")\n        this.sub = subProvider.getService();\n        this.editForm = fb.group({\n            city: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n            state: ['', Validators.compose([Validators.required, Validators.minLength(2)])],\n            zipCode: ['', Validators.compose([Validators.required, Validators.minLength(5)])],\n            name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n            version: [1, Validators.required],\n            id: [-1]\n\n\n\n\n        })\n\n\n \n        this.crudRequestSubscription = this.sub.getChannel().subscribe(CRUD_RESTAURANT_WILDCARD_TOPIC,\n            (data: any, envelope: IEnvelope) => this.handleCrudOperation(data, envelope));\n\n        \n    }\n\n    handleCrudOperation(data: any, envelope: IEnvelope) {\n        let action = envelope.topic.split('.')[0];\n       // console.log(\"in edit-restaurant handleCrud \" + action);\n        if (action === \"DELETE\") {\n            this.backUp = null;\n            this.editForm.reset();\n            return;\n        }\n        this.backUp = { ...data.selectedRestaurant };\n        delete this.backUp.reviewDTOs;\n        this.editForm.reset();\n        this.editForm.setValue(this.backUp);\n        this.actionState = action;\n\n\n\n    }\n\n\n    ngOnDestroy() {\n        if (this.crudRequestSubscription) {\n            this.crudRequestSubscription.unsubscribe();\n            this.crudRequestSubscription = null;\n        }\n    }\n\n\n    log() {\n        // console.log(this.editForm.value);\n        console.log(` errors ${JSON.stringify(this.editForm.controls.city.errors)} min  ${this.editForm.controls.city.errors.minlength}`)\n    }\n\n    formOkay() {\n        return this.editForm.valid && !this.equalToBackup();\n    }\n    /**\n     * return true if you are equal to the backup \n     * false if not\n     */\n    equalToBackup() {\n        if (!this.backUp) {\n            return true;\n        }\n        var akeys = Object.keys(this.backUp);\n        var bkeys = Object.keys(this.editForm.value);\n        var len = akeys.length;\n        if (len != bkeys.length) return false;\n        for (var i = 0; i < len; i++) {\n            if (this.backUp[akeys[i]] !== this.editForm.value[akeys[i]]) return false;\n        }\n        return true;\n    }\n\n\n\n\n    saveAction(ev) {\n        if (this.formOkay()) {\n            var dataToSend = this.editForm.value;\n            this.backUp = this.editForm.value;\n            this.editForm.reset();\n            this.editForm.setValue(this.backUp);\n            if (this.actionState == \"ADD\") {\n                 \n                this.sub.getChannel().publish(ADD_RESTAURANT_COMMIT_TOPIC,dataToSend);\n            }\n            else {\n                \n                this.sub.getChannel().publish(SAVE_RESTAURANT_COMMIT_TOPIC,dataToSend);\n            }\n\n        }\n    }\n\n    cancelAction() {\n        this.editForm.reset();\n        this.editForm.setValue(this.backUp);\n\n    }\n\n}\n"],"sourceRoot":"/src"}