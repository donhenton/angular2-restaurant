{"version":3,"sources":["../../src/app/components/restaurant-list.ts"],"names":[],"mappings":"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","file":"restaurant-list.js","sourcesContent":["import { Component, ViewChildren, Renderer, Inject } from '@angular/core';\nimport { Restaurant } from './../model/restaurant.interface';\nimport { RestaurantService } from './../services/restaurant.service';\nimport { RestaurantListRow } from './restaurant-list-row';\nimport PubSubService, { PubSubSystem } from './../services/pubsub.service';\nimport { WaitRequest, RefreshMessage } from './../model/restaurant.interface';\nimport * as postal from 'postal';\nimport { DELETE_RESTAURANT_COMMIT_TOPIC,REFRESH_RESTAURANT_TOPIC,CRUD_RESTAURANT_WILDCARD_TOPIC, WAIT_TOPIC, \n    ADD_RESTAURANT_TOPIC, DELETE_RESTAURANT_TOPIC, EDIT_RESTAURANT_TOPIC, REFRESH_REVIEW_TOPIC\n} from './../services/pubsub.service'\n\n@Component({\n    selector: 'restaurant-list',\n    template: `\n   \n   \n<div class=\"restaurantListContainer\">\n<button (click)=\"performAdd($event)\" class=\"editButton addButton\" >Add Record</button>\n    <div id=\"restaurantScrollList\">\n        <div id=\"tHeadContainer\" data-reactid=\".0.1.1.0\">\n            <table>\n                <tbody>\n                    <tr>\n                        <th class=\"nameItem\">Name</th>\n                        <th class=\"cityItem\">City</th>\n                        <th class=\"stateItem\">State</th>\n                        <th class=\"zipCodeItem\">Zip Code</th>\n                        <th class=\"versionItem\">Version</th>\n                        <th class=\"actionItems\">&nbsp;</th>\n                        <th class=\"actionItems\">&nbsp;</th>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div id=\"tbodyContainer\">\n            <table>\n                <tbody>\n                  <tr  [attr.data-id]=\"row.id\" [ngClass]=\"getRowClass(row.id)\" *ngFor=\"let row of this.restaurantList\">\n                  <restaurant-list-row [row]=\"row\"   (edit-event)=\"onEditChangeEvent($event)\" ></restaurant-list-row>\n                  </tr>\n                </tbody>\n            </table>\n\n        </div>\n\n\n\n    </div>\n</div>\n  \n  `\n})\nexport class RestaurantList {\n\n    private isLoading: boolean = false;\n    private restaurantList: Restaurant[];// cannot place in constructor for some reason\n    private doRoll: boolean = false;\n    private selectedRowId = -1;\n    private crudSubscription: ISubscriptionDefinition;\n    private refreshSubscription: ISubscriptionDefinition;\n    private subscriptions: ISubscriptionDefinition[] = [];\n    private sub: PubSubSystem;\n\n\n\n    @ViewChildren(RestaurantListRow) rowItems: RestaurantListRow[];\n\n    constructor(private restaurantService: RestaurantService, @Inject(Renderer) private renderer: Renderer,\n        private subProvider: PubSubService, ) {\n        this.sub = subProvider.getService();\n        this.restaurantList = [];\n        this.crudSubscription = this.sub.getChannel().subscribe(CRUD_RESTAURANT_WILDCARD_TOPIC,\n            (data: any, envelope: IEnvelope) => this.handleCrudOperation(data, envelope));\n        this.refreshSubscription = this.sub.getChannel().subscribe(REFRESH_RESTAURANT_TOPIC,\n            (data: any, envelope: IEnvelope) => this.handleRefresh(data, envelope));\n\n        let s1 = this.sub.getChannel().subscribe(REFRESH_REVIEW_TOPIC,\n            (data: any, envelope: IEnvelope) => this.handleReviewRefresh(data.selectedRestaurant, envelope));\n\n        this.subscriptions.push(this.crudSubscription);\n        this.subscriptions.push(this.refreshSubscription);\n        this.subscriptions.push(s1);\n\n    }\n\n    handleReviewRefresh(data:Restaurant, envelope:IEnvelope)\n    {\n         let t =      this.restaurantList.map( (res) => {\n            if (res.id == data.id)\n            {\n                console.log(\"refreshing reviews in list\")\n                res = {...data};\n            }\n            return res;\n           \n\n\n        })   \n\n        this.restaurantList = <Restaurant[]>t;\n    }\n\n    handleCrudOperation(data: any, envelope: IEnvelope) {\n      //  console.log(\"in restaurant-list handleCrud \" + envelope.topic + \" not needed \");\n    }\n    handleRefresh(data: RefreshMessage, envelope: IEnvelope) {\n        // console.log(\"in restaurant-list refresh \" + JSON.stringify(envelope));\n        console.log('got refresh message')\n        if (data.selectedRestaurantId) {\n            //if this is an add, roll\n            this.selectedRowId = data.selectedRestaurantId;\n\n\n        }\n        this.ngOnInit();\n    }\n\n\n    getRowClass(rowId) {\n        var classString = \"restaurantRow\";\n        if (rowId === this.selectedRowId) {\n            classString += \" highLighted\"\n        }\n        return classString;\n    }\n\n    ngAfterViewChecked() {\n\n        if (this.rowItems && this.selectedRowId > -1 && this.doRoll) {\n            let activeRow = this.rowItems.filter(r => {\n                return r.row.id === this.selectedRowId;\n            })\n            if (activeRow && activeRow.length == 1) {\n                //console.log(\"did the scroll\")\n                this.renderer.invokeElementMethod(activeRow[0].getDom(), 'scrollIntoView', [{\n                    behavior: \"smooth\",\n                    block: \"start\",\n                }]);\n                //console.log(\"xxx \"+activeRow[0].row.name)\n                this.doRoll = false;\n            }\n            else {\n                //console.log(\"active row not found\")\n                this.doRoll = false;\n            }\n\n        }\n\n    }\n\n    ngOnDestroy() {\n\n        this.subscriptions.forEach(s => {\n            if (s) {\n                \n                s.unsubscribe();\n                s = null;\n            }\n        })\n\n    }\n    sendWait(state: boolean) {\n        var waitMessage = <WaitRequest>{};\n        waitMessage.state = state;\n        this.sub.getChannel().publish(WAIT_TOPIC, waitMessage);\n    }\n\n    ngOnInit() {\n\n\n        this.restaurantService.getAllRestaurants()\n            .subscribe(json => {\n                this.isLoading = false;\n                this.restaurantList = [];\n                json.forEach(j => {\n\n                    this.restaurantList.push(j)\n\n                })\n\n                this.sendWait(false);\n\n\n                if (this.selectedRowId && this.selectedRowId > 0) {\n                    //you are coming in on an ADD so roll the window\n                    this.doRoll = true;\n                    //console.log(\"doing an add so roll\")\n                }\n\n\n\n\n            }, error => {\n\n                this.isLoading = false;\n                console.error(error);\n                this.sendWait(false);\n\n\n            });\n\n    }\n\n    onEditChangeEvent(ev) {\n\n        var message = null;\n\n        this.selectedRowId = ev.selectedRestaurant.id;\n\n        if (ev.type === 'delete') {\n\n            var confirmMessage = 'Do you want to delete \"' + ev.selectedRestaurant.name + '\" ?'\n            var confirm = window.confirm(confirmMessage);\n            if (confirm && confirm === true) {\n                this.signalCRUDEvent(\"DELETE\", ev);\n            }\n\n        }\n        else {\n            this.signalCRUDEvent(\"EDIT\", ev);\n\n        }\n\n\n\n    }\n\n    signalCRUDEvent(type: string, payload: any) {\n        let topic = null;\n        if (type === 'ADD') {\n            topic = ADD_RESTAURANT_TOPIC;\n        }\n        if (type === 'EDIT') {\n            topic = EDIT_RESTAURANT_TOPIC;\n        }\n        if (type === 'DELETE') {\n            topic = DELETE_RESTAURANT_COMMIT_TOPIC;\n        }\n        this.sub.getChannel().publish(topic, payload);\n    }\n\n\n    performAdd() {\n        let emptyRestaurant = <Restaurant>{};\n        emptyRestaurant.id = -1;\n        emptyRestaurant.version = 1;\n        emptyRestaurant.name = \"\";\n        emptyRestaurant.city = \"\";\n        emptyRestaurant.state = \"\";\n        emptyRestaurant.zipCode = \"\";\n        this.signalCRUDEvent(\"ADD\", {selectedRestaurant: emptyRestaurant});\n\n\n    }\n\n\n\n\n}"],"sourceRoot":"/src"}