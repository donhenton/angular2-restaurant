{"version":3,"sources":["../../src/app/pipes/DotDotPipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;YAQA;;;;;;;;;;eAUG;YACG,MAAM;gBAAZ;gBAiBA,CAAC;gBAhBG,0BAAS,GAAT,UAAU,WAAmB;oBAAE,cAAc;yBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;wBAAd,6BAAc;;oBACzC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;wBACnB,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC;oBAChC,CAAC;oBACD,IAAI,QAAQ,GAAG,GAAG,CAAC;oBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;wBACnB,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBACvB,CAAC;oBAED,IAAI,CAAC,GAAG,WAAW,CAAC;oBACpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC/B,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;oBACrB,CAAC;oBAED,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC;gBACL,aAAC;YAAD,CAjBA,AAiBC,IAAA;YAjBK,MAAM;gBAlBX,WAAI,CAAC;oBACF,IAAI,EAAE,YAAY;oBAClB,IAAI,EAAE,IAAI,CAAC,uDAAuD;iBACrE,CAAC;gBAIF;;;;;;;;;;mBAUG;eACG,MAAM,CAiBX;YAKD;;;;;;;;;;;;;cAaE;QAAA,CAAC","file":"DotDotPipe.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n    name: 'appendPipe',\n    pure: true // optional, default is true false means maintain state\n})\n\n\n\n/**\n * this pipe takes two arguments,\n *  string to append(position 0)\n *  number of times to append (position 1)\n *  if neither is supplied, it default to '...'\n *\n * USAGE:\n *\n * {message | appendPipe:3:'$'}\n *\n */\nclass MyPipe implements PipeTransform {\n    transform(inputString: string, ...args: any[]): any {\n        if (args.length == 0) {\n            return inputString + ' ...';\n        }\n        let appValue = '.';\n        if (args.length == 2) {\n            appValue = args[1];\n        }\n\n        let t = inputString;\n        for (var k = 0; k < args[0]; k++) {\n            t = t + appValue;\n        }\n\n        return t;\n    }\n}\n\n\n\n\n/*\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pomodoroFormattedTime'\n})\nexport default class FormattedTimePipe implements PipeTransform {\n  transform(totalMinutes: number): string {\n    let minutes: number = totalMinutes % 60;\n    let hours: number = Math.floor(totalMinutes / 60);\n    return `${hours}h:${minutes}m`;\n  }\n}\n*/"],"sourceRoot":"/src"}